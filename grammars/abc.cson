# If this is your first time writing a language grammar, check out:
#   - https://flight-manual.atom.io/hacking-atom/sections/creating-a-grammar/

# based on snippets taken from:
# https://github.com/atom/language-c/blob/master/grammars/c.cson
#

'scopeName': 'source.abc'
'name': 'Abc'
'fileTypes': [
  'abc'
  'hdr'
]
'patterns': [
    {
        'match': '//.*$'
        'name': 'comment'
    }
  # body...

    {
        'match': '@.*$'
        'name': 'keyword.control.directive.define.c'
    }
    {
        'begin': '/\\*'
        'end': '\\*/'
        'name': 'comment'
    }
    {
        'match': '\\b(foo|array|assert|break|case|const|continue)\\b'
        'name': 'keyword'
    }
    {
        'match': '\\b(default|do|else|enum|extern|fn|for|global)\\b'
        'name': 'keyword'
    }
    {
        'match': '\\b(static|goto|if|label|local|nullptr|of|return)\\b'
        'name': 'keyword'
    }
    {
        'match': '\\b(sizeof|struct|switch|then|type|union|while)\\b'
        'name': 'keyword'
    }
    {
        'match': '\\b(void|float|double|bool|char|int|unsigned)\\b'
        'name': 'support.type.stdint.c'
    }
    {
        'match': '\\b(long|size_t|ptrdiff_t)\\b'
        'name': 'support.type.stdint.c'
    }
    {
        'match': '\\b(i8|i16|i32|i64)\\b'
        'name': 'support.type.stdint.c'
    }
    {
        'match': '\\b(u8|u16|u32|u64)\\b'
        'name': 'support.type.stdint.c'
    }
    {
        'begin': '"'
        'beginCaptures':
            '0':
                'name': 'punctuation.definition.string.begin.c'
        'end': '"'
        'endCaptures':
            '0':
                'name': 'punctuation.definition.string.end.c'
        'name': 'string.quoted.double.c'
        'patterns': [
            {
                'include': '#string_escaped_char'
            }
            {
                'include': '#string_placeholder'
            }
            {
                'include': '#line_continuation_character'
            }
        ]
    }
    {
        'begin': '\''
        'beginCaptures':
            '0':
                'name': 'punctuation.definition.string.begin.c'
        'end': '\''
        'endCaptures':
            '0':
                'name': 'punctuation.definition.string.end.c'
        'name': 'string.quoted.single.c'
        'patterns': [
            {
                'include': '#string_escaped_char'
            }
            {
                'include': '#line_continuation_character'
            }
        ]
    }
    {
        'match': '\\b(true|false|stdin|stdout|stderr)\\b'
        'name': 'constant.language.c'
    }
    {
        'match': '\\b((0(x|X)[0-9a-fA-F]([0-9a-fA-F\']*[0-9a-fA-F])?)|(0(b|B)[01]([01\']*[01])?)|(([0-9]([0-9\']*[0-9])?\\.?[0-9]*([0-9\']*[0-9])?)|(\\.[0-9]([0-9\']*[0-9])?))((e|E)(\\+|-)?[0-9]([0-9\']*[0-9])?)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b'
        'name': 'constant.numeric.c'
    }
]
